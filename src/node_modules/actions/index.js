import {
    FETCH_WATCHES_START,
    FETCH_WATCHES_SUCCESS,
    FETCH_WATCHES_FAILURE,
    LOAD_MORE_WATCHES_START,
    LOAD_MORE_WATCHES_SUCCESS,
    LOAD_MORE_WATCHES_FAILURE,
    FETCH_WATCH_BY_ID_START,
    FETCH_WATCH_BY_ID_SUCCESS,
    FETCH_WATCH_BY_ID_FAILURE,
    ADD_WATCH_TO_CART,
    SEARCH_WATCH,
    FETCH_CATEGORIES_START,
    FETCH_CATEGORIES_SUCCESS,
    FETCH_CATEGORIES_FAILURE,
    REMOVE_WATCH_FROM_CART,
    CLEAN_CART
} from 'actionTypes'

import {getRenderedWatchesLength} from 'selectors'

import {
    fetchWatches as fetchWatchesApi,
    loadMoreWatches as loadMoreWatchesApi,
    fetchWatchById as fetchWatchByIdApi,
    fetchCategories as fetchCategoriesApi
} from 'api'
import { stringify } from 'querystring';

export const fetchWatches = () => async dispatch => {
    dispatch({type: FETCH_WATCHES_START})

    try {
        const watches = await fetchWatchesApi()
        dispatch({
            type: FETCH_WATCHES_SUCCESS,
            payload: watches
        })
    } catch(err) {
        dispatch({
            type: FETCH_WATCHES_FAILURE,
            payload: err,
            error: true
        })
    }
    
} 


export const loadMoreWatches = () => async (dispatch,getState) => {
    const offset = getRenderedWatchesLength(getState())
    dispatch({type: LOAD_MORE_WATCHES_START})

    try {
        const watches = await loadMoreWatchesApi({offset})
        dispatch({
            type: LOAD_MORE_WATCHES_SUCCESS,
            payload: watches
        })
    } catch(err) {
        dispatch({
            type: LOAD_MORE_WATCHES_FAILURE,
            payload: err,
            error: true
        })
    }

    
}


export const fetchWatchById = id => async dispatch => {
    dispatch({type:FETCH_WATCH_BY_ID_START})

    try {
      const watch = await fetchWatchByIdApi(id)
      dispatch({
          type:FETCH_WATCH_BY_ID_SUCCESS,
          payload:watch
      })  
    } catch(err) {
        dispatch({
            type: FETCH_WATCH_BY_ID_FAILURE,
            payload:err,
            error:true            
        })
       
    }
}


export const addWatchToCart = id => dispatch => {
    dispatch({
        type:ADD_WATCH_TO_CART,
        payload:id
    })
}

export const searchWatch = text => dispatch => {
    dispatch({
        type:SEARCH_WATCH,
        payload:text
    })
}

export const fetchCategories = () => async dispatch => {
    dispatch({type: FETCH_CATEGORIES_START})

    try {
        const categories = await fetchCategoriesApi()
        dispatch({
            type: FETCH_CATEGORIES_SUCCESS,
            payload: categories
        })
    } catch(err) {
        dispatch({
            type: FETCH_CATEGORIES_FAILURE,
            payload: err,
            error: true
        })
    }
    
} 

export const removeWatchFromCart = id =>  dispatch => {
    dispatch({
        type:REMOVE_WATCH_FROM_CART,
        payload:id
    })
}

export const cleanCart = () => dispatch => {
    dispatch({
        type:CLEAN_CART
    })
}


export const cartCheckOut = watches => () => {
    alert(JSON.stringify(watches))
}



